Spring AOP 프로젝트 - 시퀀스 다이어그램 (텍스트 형식)
=============================================================

시퀀스 다이어그램: Spring AOP 실행 흐름
========================================

참여자 (Participants):
- Main.main()          : 메인 클래스
- Spring Container     : Spring 컨테이너
- ProjectConfig        : 설정 클래스
- LoggingAspect       : 로깅 Aspect
- SecurityAspect      : 보안 Aspect
- CommentService      : 비즈니스 서비스
- AOP Proxy          : AOP 프록시
- Comment             : 도메인 모델

시퀀스 흐름:
============

1. 애플리케이션 시작
   Main.main() → Spring Container
   메시지: "AnnotationConfigApplicationContext(ProjectConfig.class) 생성"
   
2. Spring 컨테이너 초기화
   Spring Container → ProjectConfig
   메시지: "ProjectConfig 클래스 로드 및 스캔"
   
3. AOP 설정 활성화
   ProjectConfig → Spring Container
   메시지: "@EnableAspectJAutoProxy 활성화"
   
4. Bean 등록
   ProjectConfig → Spring Container
   메시지: "LoggingAspect Bean 등록"
   
   ProjectConfig → Spring Container
   메시지: "SecurityAspect Bean 등록"
   
   ProjectConfig → Spring Container
   메시지: "CommentService Bean 등록 (@ComponentScan)"
   
5. AOP 프록시 생성
   Spring Container → AOP Proxy
   메시지: "CommentService에 대한 AOP 프록시 자동 생성"
   
6. 메서드 호출
   Main.main() → AOP Proxy
   메시지: "service.publishComment(comment) 호출"
   
7. 보안 체크 (우선순위 1)
   AOP Proxy → SecurityAspect
   메시지: "@Before 어드바이스 실행 - checkUserLogged()"
   
   SecurityAspect → SecurityAspect
   메시지: "사용자 로그인 상태 확인"
   
   SecurityAspect → AOP Proxy
   메시지: "보안 체크 완료"
   
8. 로깅 시작
   AOP Proxy → LoggingAspect
   메시지: "@Around 어드바이스 실행 - log() 메서드"
   
   LoggingAspect → LoggingAspect
   메시지: "메서드 실행 전 로깅: 'Logging Aspect: Calling the intercepted method'"
   
9. 실제 메서드 실행
   LoggingAspect → CommentService
   메시지: "joinPoint.proceed() 호출"
   
   CommentService → CommentService
   메시지: "publishComment() 메서드 실행"
   
   CommentService → Comment
   메시지: "Comment 객체 처리"
   
   Comment → CommentService
   메시지: "Comment 데이터 반환"
   
   CommentService → CommentService
   메시지: "로깅: 'Publishing comment: Demo comment'"
   
   CommentService → LoggingAspect
   메시지: "결과 반환: 'SUCCESS'"
   
10. 로깅 완료
    LoggingAspect → LoggingAspect
    메시지: "메서드 실행 후 로깅: 'Logging Aspect: Method executed and returned SUCCESS'"
    
    LoggingAspect → AOP Proxy
    메시지: "로깅 완료 후 결과 반환: 'SUCCESS'"
    
11. 결과 반환
    AOP Proxy → Main.main()
    메시지: "최종 결과 반환: 'SUCCESS'"
    
12. 애플리케이션 종료
    Main.main() → Main.main()
    메시지: "프로그램 정상 종료"

시퀀스 다이어그램 (ASCII 아트):
===============================

Main.main()    Spring Container    ProjectConfig    LoggingAspect    SecurityAspect    CommentService    AOP Proxy
     |                |                   |                |                   |                |                |
     |                |                   |                |                   |                |                |
     |--1. 컨테이너 생성-->|                   |                |                   |                |                |
     |                |                   |                |                   |                |                |
     |                |--2. 설정 로드------->|                |                   |                |                |
     |                |                   |                |                   |                |                |
     |                |<--3. AOP 활성화----|                |                   |                |                |
     |                |                   |                |                   |                |                |
     |                |<--4. Bean 등록-----|                |                   |                |                |
     |                |                   |                |                   |                |                |
     |                |--5. 프록시 생성----------------------->|                |                   |                |
     |                |                   |                |                   |                |                |
     |--6. 메서드 호출------------------------------------------>|                |                   |                |
     |                |                   |                |                   |                |                |
     |                |                   |                |                   |                |--7. 보안 체크-->|
     |                |                   |                |                   |                |                |
     |                |                   |                |                   |                |<--보안 완료----|
     |                |                   |                |                   |                |                |
     |                |                   |                |--8. 로깅 시작---->|                |                |
     |                |                   |                |                   |                |                |
     |                |                   |                |--9. 실제 메서드-->|                |                |
     |                |                   |                |                   |                |                |
     |                |                   |                |                   |                |--Comment 처리->|
     |                |                   |                |                   |                |                |
     |                |                   |                |                   |                |<--Comment 반환|
     |                |                   |                |                   |                |                |
     |                |                   |                |                   |                |--로깅-------->|
     |                |                   |                |                   |                |                |
     |                |                   |                |<--결과 반환------|                |                |
     |                |                   |                |                   |                |                |
     |                |                   |                |--10. 로깅 완료-->|                |                |
     |                |                   |                |                   |                |                |
     |                |                   |                |                   |                |<--로깅 완료---|
     |                |                   |                |                   |                |                |
     |                |                   |                |                   |                |--11. 결과 반환|
     |                |                   |                |                   |                |                |
     |<--12. 최종 결과--------------------------------------------------------|                |                |
     |                |                   |                |                   |                |                |

주요 포인트:
============

1. **AOP 프록시 자동 생성**: @EnableAspectJAutoProxy로 Spring이 자동으로 프록시 생성
2. **어드바이스 실행 순서**: @Order(1)로 SecurityAspect가 먼저 실행
3. **@Around 어드바이스**: 메서드 실행 전후에 로깅 처리
4. **joinPoint.proceed()**: 실제 메서드 실행을 위한 핵심 메서드
5. **자동 인터셉션**: @ToLog 어노테이션이 붙은 메서드 호출 시 자동으로 Aspect 실행

에러 처리 시나리오:
==================

1. **보안 체크 실패**: SecurityAspect에서 예외 발생 시 메서드 실행 중단
2. **로깅 실패**: LoggingAspect에서 예외 발생 시에도 원본 메서드는 정상 실행
3. **메서드 실행 실패**: CommentService에서 예외 발생 시 LoggingAspect에서 예외 처리

성능 고려사항:
==============

1. **프록시 생성**: 애플리케이션 시작 시 한 번만 생성
2. **런타임 오버헤드**: 메서드 호출 시 Aspect 실행으로 인한 약간의 성능 저하
3. **메모리 사용**: 프록시 객체로 인한 추가 메모리 사용
